---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name  | quote }}
    heritage: {{ .Release.Service  | quote }}
    version: {{ .Values.imageTag | quote }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  revisionHistoryLimit: 50
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      {{- if .Values.redeploy }}
      annotations:
        forceRedeployUniqId: {{ now | quote }}
      {{- end }}
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        release: {{ .Release.Name  | quote }}
        heritage: {{ .Release.Service  | quote }}
        version: {{ .Values.imageTag | quote }}
    spec:
      affinity:
{{ toYaml (default .Values.global.appServiceAffinity .Values.affinity) | indent 8 }}
      imagePullSecrets:
        - name: "{{ .Release.Name }}-{{ .Values.global.codefresh }}-registry"
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        ports:
        - containerPort: {{ .Values.port }}
          protocol: TCP
        volumeMounts:
        - mountPath: /cacerts
          name: cf-ca
        - mountPath: /certs
          name: certs-data
      restartPolicy: Always
      volumes:
      - name: cf-ca
        secret:
          secretName: {{ template "fullname" . }}
      - name: certs-data
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}