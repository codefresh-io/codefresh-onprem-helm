{{- $servicePort := "http" -}}
{{- if index $.Values "argo-platform" "ingress" "enabled" -}}
{{- range $rule := index $.Values "argo-platform" "ingress" "rules" }}
---
{{- if index $.Values "argo-platform" "enabled" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "argo-platform.fullname" $ }}{{ if $rule.name }}{{(print "-" $rule.name)}}{{ end }}
  labels:
    app: {{ template "argo-platform.fullname" $ }}
    chart: {{ template "argo-platform.chart" $ }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
  annotations:
    #kubernetes.io/ingress.class: nginx-codefresh
  {{- with $rule.annotations -}}
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ $.Values.ingress.ingressClassName | default (index $.Values "ingress-nginx" "controller" "ingressClassResource" "name") }}
  rules:
  - host: {{ $.Values.global.appUrl }}
    http:
      paths:
    {{- range $serviceName, $paths := $rule.services }}
      {{- range $path := $paths }}
      - path: {{ $path }}
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ $serviceName }}
            port:
              name: {{ $servicePort }}
      {{- end }}
    {{- end }}
      # - path: /metrics
      #   pathType: ImplementationSpecific
      #   backend:
      #     service:
      #       name: non-existent
      #       port:
      #         number: non-existent
  {{- if $rule.tls }}
  tls:
  - hosts:
    - {{ $.Values.global.appUrl }}
    {{- if $.Values.webTLS }}
    secretName: {{ $.Values.global.appUrl }}-cert
    {{- else }}
    secretName: {{ template "fullname" $ }}-star-selfsigned
    {{- end }}
  {{- end }}
{{- end -}}
{{- end -}}
{{- end }}