{{ $libTemplateName := printf "cf-common-%s" (index .Subcharts "cf-common").Chart.Version }}
{{- if .Values.mongodb.migration.enabled }}
---
{{- $tolerations := .Values.hooks.tolerations | default list }}
{{- $globalTolerations := .Values.global.tolerations | default list }}
{{- $allToleration := concat $globalTolerations $tolerations }}
{{- $affinity := .Values.hooks.affinity | default dict }}
{{- $globalAffinity := .Values.global.affinity | default dict }}
{{- $allAffinity := mergeOverwrite $globalAffinity $affinity }}
{{- $nodeSelector := .Values.hooks.nodeSelector | default dict }}
{{- $globalNodeSelector := .Values.global.nodeSelector | default dict }}
{{- $allNodeSelector := mergeOverwrite $globalNodeSelector $nodeSelector }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "codefresh.fullname" . }}-set-mongodb-compat-version
  labels:
    {{ include "codefresh.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  ttlSecondsAfterFinished: 180
  template:
    metadata:
      name: {{ include "codefresh.fullname" . }}-set-mongodb-compat-version
      labels:
        {{ include "codefresh.labels" . | nindent 8 }}
    spec:
      {{- if .Values.global.imageRegistry }}
      imagePullSecrets:
        - name: "{{ .Release.Name }}-{{ .Values.global.codefresh }}-registry"
      {{- end }}
      securityContext:
        {{- toYaml .Values.hooks.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ include "codefresh.fullname" . }}-set-mongodb-compat-version
        image: {{ include (printf "%s.image.name" $libTemplateName) (dict "image" .Values.hooks.image "context" .) }}
        envFrom:
          - secretRef:
              name: {{ include "codefresh.fullname" . }}
        env:
          - name: MONGODB_HOST
          {{- include "codefresh.mongodb-host-env-var-value" . | indent 12 }}
          - name: MONGODB_USER
          {{- include "codefresh.mongodb-user-env-var-value" . | indent 12 }}
          - name: MONGODB_PASSWORD
          {{- include "codefresh.mongodb-password-env-var-value" . | indent 12 }}
          - name: MONGO_URI
          {{- include "codefresh.mongo-seed-uri-env-var-value" . | indent 12 }}
          - name: MONGODB_ROOT_USER
          {{- include "codefresh.mongodb-root-user-env-var-value" . | indent 12 }}
          - name: MONGODB_ROOT_PASSWORD
          {{- include "codefresh.mongodb-root-password-env-var-value" . | indent 12 }}
          - name: MONGODB_COMPAT_VERSION
            value: "{{ .Values.mongodb.migration.featureCompatibilityVersion }}"
        command:
          - "/bin/bash"
          - "-c"
          - |
            {{ .Files.Get "files/mongoSetCompatibilityVersion.sh" | nindent 12  }}
        resources:
          {{- toYaml .Values.hooks.resources | nindent 10 }}
        volumeMounts:
        {{- include (printf "%s.volumeMounts" $libTemplateName) (dict "Values" .Values.hooks.volumeMounts "context" $) | indent 10 }}
      {{- with $allNodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $allAffinity }}
      affinity:
        {{- toYaml . | nindent 8}}
      {{- end }}
      {{- with $allToleration }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      {{- include (printf "%s.volumes" $libTemplateName) (dict "Values" .Values.hooks.volumes "context" $) | indent 8 }}
      restartPolicy: Never
{{- end }}
