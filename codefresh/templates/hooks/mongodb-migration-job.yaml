{{- if and (.Values.mongodb.migration.enabled) (or .Values.mongodb.enabled .Values.mongo.enabled) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "fullname" . }}-mongo-dump
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name  | quote }}
    heritage: {{ .Release.Service  | quote }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "5"
spec:
  ttlSecondsAfterFinished: 180
  template:
    metadata:
      name: {{ include "fullname" . }}-mongo-dump
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        release: {{ .Release.Name  | quote }}
        heritage: {{ .Release.Service  | quote }}
    spec:
      {{- with .Values.mongodb.migration.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongodb.migration.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: mongo-dump
        {{- if .Values.global.privateRegistry }}
        image: {{ .Values.global.dockerRegistry }}/bitnami/mongodb:4.2
        {{- else }}
        image: bitnami/mongodb:4.2
        {{- end }}
        command:
          - "/bin/bash"
          - "-c"
          - |
            set -euxo pipefail
            mongodump --host "$MONGODB_HOST:$MONGODB_PORT" -u root -p $MONGODB_ROOT_PASSWORD -o /app
        env:
        - name: MONGODB_ROOT_PASSWORD
          value: {{ coalesce .Values.mongodb.mongodbRootPassword .Values.mongodb.auth.rootPassword | quote }}
        - name: MONGODB_HOST
          value: "mongodb"
        - name: MONGODB_PORT
          value: "27017"
        securityContext:
          runAsUser: 1001
        {{- with .Values.mongodb.migration.resources }}
        resources: {{ toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /app
      securityContext:
        fsGroup: 1001
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.mongodb.migration.existingClaim  | default (printf "%s-mongo-dump-pvc" ( include "fullname" . )) }}
      restartPolicy: OnFailure
      dnsPolicy: ClusterFirst
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "fullname" . }}-mongo-restore
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name  | quote }}
    heritage: {{ .Release.Service  | quote }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "5"
spec:
  ttlSecondsAfterFinished: 180
  template:
    metadata:
      name: {{ include "fullname" . }}-mongo-restore
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        release: {{ .Release.Name  | quote }}
        heritage: {{ .Release.Service  | quote }}
    spec:
      {{- with .Values.mongodb.migration.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongodb.migration.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: mongo-restore
        {{- if .Values.global.privateRegistry }}
        image: {{ .Values.global.dockerRegistry }}/bitnami/mongodb:4.2
        {{- else }}
        image: bitnami/mongodb:4.2
        {{- end }}
        command:
          - "/bin/bash"
          - "-c"
          - |
            set -euxo pipefail
            mongorestore --host "$MONGODB_HOST:$MONGODB_PORT" -u root -p $MONGODB_ROOT_PASSWORD /app
        env:
        - name: MONGODB_ROOT_PASSWORD
          value: {{ .Values.mongodb.auth.rootPassword | quote }}
        - name: MONGODB_HOST
          value: "{{ .Release.Name }}-mongodb"
        - name: MONGODB_PORT
          value: "27017"
        securityContext:
          runAsUser: 1001
        {{- with .Values.mongodb.migration.resources }}
        resources: {{ toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /app
      securityContext:
        fsGroup: 1001
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.mongodb.migration.existingClaim  | default (printf "%s-mongo-dump-pvc" ( include "fullname" . )) }}
      restartPolicy: OnFailure
      dnsPolicy: ClusterFirst
{{- end }}