{{- if and .Values.hooks.rabbitmq.enabled .Values.rabbitmq.enabled }}
{{- $libTemplateName := printf "cf-common-%s" (index .Subcharts "cf-common").Chart.Version }}
{{- $tolerations := .Values.hooks.consul.tolerations | default list }}
{{- $globalTolerations := .Values.global.tolerations | default list }}
{{- $allToleration := concat $globalTolerations $tolerations }}
{{- $affinity := .Values.hooks.consul.affinity | default dict }}
{{- $globalAffinity := .Values.global.affinity | default dict }}
{{- $allAffinity := mergeOverwrite $globalAffinity $affinity }}
{{- $nodeSelector := .Values.hooks.consul.nodeSelector | default dict }}
{{- $globalNodeSelector := .Values.global.nodeSelector | default dict }}
{{- $allNodeSelector := mergeOverwrite $globalNodeSelector $nodeSelector }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "codefresh.fullname" . }}-rabbitmq-enable-stable-flags
  labels:
    {{ include "codefresh.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "5"
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation,hook-failed
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 6
  template:
    metadata:
      name: {{ template "codefresh.fullname" . }}-rabbitmq-enable-stable-flags
      labels:
        {{ include "codefresh.labels" . | nindent 8 }}
    spec:
      {{- include (printf "%s.image.pullSecrets" $libTemplateName ) . | nindent 6 }}
      containers:
      - name: {{ template "codefresh.fullname" . }}-rabbitmq-enable-stable-flags
        image: {{ include (printf "%s.image.name" $libTemplateName) (dict "image" .Values.hooks.rabbitmq.image "context" .) }}
        env:
        - name: RABBITMQADMIN_TARGET_HOST
          valueFrom:
            secretKeyRef:
              name: {{ template "codefresh.fullname" . }}-rabbitmq-enable-stable-flags
              key: RABBITMQADMIN_TARGET_HOST
        - name: RABBITMQADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "codefresh.fullname" . }}-rabbitmq-enable-stable-flags
              key: RABBITMQADMIN_USERNAME
        - name: RABBITMQADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "codefresh.fullname" . }}-rabbitmq-enable-stable-flags
              key: RABBITMQADMIN_PASSWORD
        command:
        - /bin/bash
        - -c
        - |
          rabbitmqadmin \
            --host=$RABBITMQADMIN_TARGET_HOST \
            --username=$RABBITMQADMIN_USERNAME \
            --password=$RABBITMQADMIN_PASSWORD \
            feature_flags enable_all
        resources:
          {{- toYaml .Values.hooks.rabbitmq.resources | nindent 10 }}
      {{- with $allNodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $allAffinity }}
      affinity:
        {{- toYaml . | nindent 8}}
      {{- end }}
      {{- with $allToleration }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      restartPolicy: OnFailure
{{- end }}
