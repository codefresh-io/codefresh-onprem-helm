# Ebable RBAC for K8s cluster
# Requires Kubernetes 1.6.4+
# rbacEnable: true

## Specify a imagePullPolicy
## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
imagePullPolicy: IfNotPresent

# default service port
servicePort: 80

# image with kubectl that can work with our K8s version
kubectlImage: lachlanevenson/k8s-kubectl:v1.6.7

# CFCR domain
# cfcrDomain: staging.cfcr.io (default)

# Segment black list
# segmentBlackList: "" by default

# OAuth router callback
# oauthRouterCallback: empty (default)

# GCE project
# gceProject: savvy-badge-103912 (default == staging)


# override mongodb chart values
mongodb:
  # image to use
  image: bitnami/mongodb:3.4.6-r0

# override PostgresSQL settings
postgresql:
  postgresDatabase: codefresh

# overrride registry
registry:
  mainChart: codefresh

# use mongodb service name; should be same as mongo.nameOverride
cfapi:
  mongodbImage: bitnami/mongodb:3.4.6-r0
  env:
    # set on-premise flag
    ON_PREMISE: true
    # set LOG Level to DEBUG
    LOGGER_LEVEL: debug

# internal ingress controller; disable by default
ingress:
  enabled: false
  domain: '*'

# hermes settings
hermes:
  enabled: true

dindImage: docker:17.05-dind

#=======================
# GLOBAL settings
#=======================
global:
  # Instantiate databases with seed data. Usually used in dynamic and on-prem environments.
  seedJobs: true

  # Global codefresh chart name; all subcharts use this name to access secrets and configmaps
  codefresh: codefresh

  # application url root
  appUrl: codefresh.dev

  # default application protocol
  appProtocol: http

  # Codefresh Payments service
  paymentsService: payments
  paymentsServicePort: 9000

  # cfapi service name
  cfapiService: cfapi

  # cfapi internal service port
  cfapiInternalPort: 3000

  # Builder service
  builderService: builder

  # Runner service
  runnerService: runner

  # dind image with tag
  dindImage: docker:17.05-dind
  # dind cpu requests
  dindCPU: 100m
  # dind memory requests
  dindMemory: 256Mi
  # dind cpu limits
  dindCPULimits: 1000m
  # dind memory limits
  dindMemoryLimits: 4096Mi

  # tls-sign service
  tlsSignService: cfsign
  tlsSignPort: 4999

  #----
  # Names and ports for commomn services

  # nats service
  natsService: nats
  natsPort: 4222
  # queueServers: nats://queue:4222

  # rabbitmq service name
  rabbitService: rabbitmq

  # mongodb service
  # This is the mongodb database that will be created in on-prem environments
  mongoService: mongodb
  mongoPort: 27017
  mongodbDatabase: codefresh

  # consul service
  consulService: consul
  # consul http port
  consulHttpPort: 8500

  # Redis service
  redisService: redis

  # Docker Registry service
  registryService: registry
  # registry port
  registryPort: 5000

  # PostgresSQL service
  postgresService: postgresql
  # database
  postgresDatabase: codefresh

  clusterProvidersService: cluster-providers
  clusterProvidersPort: 9000
  kubeIntegrationService: kube-integration
  kubeIntegrationPort: 9000
  accountsReferralsService: accounts-referrals
  accountsReferralsPort: 9000

  chartsManagerService: charts-manager
  chartsManagerPort: 9000

  dindProviderService: dind-provider
  dindProviderPort: 9000

  contextManagerService: context-manager
  contextManagerPort: 9000

  pipelineManagerService: pipeline-manager
  pipelineManagerPort: 9000

  # API Gateway: hermes trigger-manager service
  hermesService: hermes
  hermesPort: 80
  hermesProtocol: "http"


cfui:
  enabled: true
  chartVersion: 0.0.1
