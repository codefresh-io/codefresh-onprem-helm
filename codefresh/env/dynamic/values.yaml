---
# records to /etc/hosts of the containers
# hostsApp: default empty

firebaseUrl: "https://codefresh-staging-75bd2.firebaseio.com/staging"

# customize consul chart
consul:
  DatacenterName: dynamic
  Replicas: 1
  Memory: 64Mi

postgresql:
  resources:
    requests:
      memory: 128Mi

mongodb:
  resources:
    requests:
      memory: 64Mi

redis:
  resources:
    requests:
      memory: 64Mi

# use smaller registry storage
registry:
  storageSize: 10Gi

builder:
  replicaCount: 1

runtimeEnvBlob: |
  {
    "default": {
      "dockerDaemonScheduler": {
        "type": "ConsulNodes",
        "cluster": {
          "name": "",
          "type": "builder",
          "returnRunnerIfNoBuilder": true
        }
      },
      "runtimeScheduler": {
        "type": "KubernetesPod",
        "cluster": {
          "inCluster": true,
          "namespace": "codefresh"
        },
        "image": "codefresh/engine:v21",
        "envVars": {
          "RESOURCE_LIMITATIONS_JSON": "/etc/admin/resource-limitations.json",
          "RUNTIME_INTERNAL_REGISTRY_JSON": "/etc/admin/internal-registry.json",
          "RUNTIME_ADDITIONAL_INTERNAL_REGISTRIES_JSON": "/etc/admin/additional-internal-registries.json",
          "LOGGER_LEVEL": "debug",
          "NODE_ENV": "kubernetes",
          "DOCKER_PUSHER_IMAGE": "codefresh/cf-docker-pusher:v2",
          "DOCKER_PULLER_IMAGE": "codefresh/cf-docker-puller:v2",
          "DOCKER_BUILDER_IMAGE": "codefresh/cf-docker-builder:v9",
          "CONTAINER_LOGGER_IMAGE": "codefresh/cf-container-logger:0.0.18",
          "GIT_CLONE_IMAGE": "codefresh/cf-git-cloner:v3",
          "NODE_TLS_REJECT_UNAUTHORIZED": "0"
        },
        "volumeMounts": {
          "internal-registry": {
            "name": "internal-registry",
            "mountPath": "/etc/admin/internal-registry.json",
            "subPath": "internal-registry.json",
            "readOnly": true
          },
          "additional-internal-registries": {
            "name": "additional-internal-registries",
            "mountPath": "/etc/admin/additional-internal-registries.json",
            "subPath": "additional-internal-registries.json",
            "readOnly": true
          },
          "resource-limitations": {
            "name": "resource-limitations",
            "mountPath": "/etc/admin/resource-limitations.json",
            "subPath": "resource-limitations.json",
            "readOnly": true
          },
          "cf-certs": {
            "name": "cf-certs",
            "mountPath": "/etc/ssl/cf",
            "readOnly": true
          }
        },
        "volumes": {
          "internal-registry": {
            "name": "internal-registry",
            "configMap": {
              "name": "cf-codefresh-registry"
            }
          },
          "additional-internal-registries": {
            "name": "additional-internal-registries",
            "configMap": {
              "name": "cf-codefresh-registry"
            }
          },
          "resource-limitations": {
            "name": "resource-limitations",
            "configMap": {
              "name": "cf-codefresh-resource-limitations"
            }
          },
          "cf-certs": {
            "name": "cf-certs",
            "secret": {
              "secretName": "cf-codefresh-cf-certs"
            }
          }
        }
      }
    }
  }

# cstomize runtime environments
runtime_envs:
  - name: codefresh-inc
    inCluster: true
    selectorRuntimeEnv: codefresh-inc
    namespace: dinds

# customize cfapi
cfapi:
  providersData: |
    {
      "aws": {
        "name": "aws",
        "settings": {
          "KeyName": "cf-test-1",
          "route53Zone": "ZVG87U9HV33SS"
        },
        "services": {
          "docker-node-us-east-1": {
            "region": "us-east-1",
            "name": "docker-node",
            "dnsPrefix": "cf-staging-aue1-docker-node",
            "dnsDomain": "cf-cd.com.",
            "iface": "public",
            "imageName": "ami-e33d40f5",
            "machineTypes": {
              "all": [
                "c4.large",
                "c4.xlarge",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m3.medium"
              ],
              "default": "c4.large"
            },
           "volumeTypes": {
                  "all": [
                    "standard",
                    "gp2"
                  ],
                  "default": "gp2"
            },
            "securityGroupIds": [
              "sg-ef5ed293", "sg-95fa54e9"
            ],
            "BlockDeviceMappings": [
              {
                "DeviceName": "/dev/sda1",
                "Ebs": {
                  "DeleteOnTermination": true,
                  "VolumeSize": 200,
                  "VolumeType": "standard"
                }
              }
            ],
            "subnetId": [
              "subnet-66def54e",
              "subnet-12bddd28"
            ],
            "metadata": {
              "autoscale": "docker-node",
              "environment": "aws-staging"
            }
          }
        }
      },
      "gce": {
          "name": "gce",
          "settings": {
            "keyFilename": "/etc/admin/gce_creds.json",
            "projectId": "savvy-badge-103912"
          },
          "services": {}
      }
    }
  env:
    OAUTH_ROUTER_CALLBACK: http://codefresh-inc-3.cf-cd.com:2222/api/auth/github/callback/

tags:
  saas: true
  infra: true
  old-scheduler: false
