---
# records to /etc/hosts of the containers
# hostsApp: default empty

firebaseUrl: "https://codefresh-staging-75bd2.firebaseio.com/staging"

# customize consul chart
consul:
  DatacenterName: dynamic
  Replicas: 1
  Memory: 64Mi

postgresql:
  resources:
    requests:
      memory: 128Mi

mongodb:
  resources:
    requests:
      memory: 64Mi

redis:
  resources:
    requests:
      memory: 64Mi

# use smaller registry storage
registry:
  storageSize: 10Gi

getRuntimeEnvs: files/dynamic/cluster-dev-runtimeEnvironments.json

# customize cfapi
cfapi:
  providersData: |
    {
       "azure":{
          "name":"azure",
          "settings":{
             "AppKeyFile":"/etc/admin/azure_creds.json",
             "dnsZoneResourceGroup":"general",
             "dnsZoneName":"az.codefresh.io"
          },
          "services":{
             "docker-node-central-us":{
                "name":"docker-node",
                "dnsPrefix":"cf-staging-azuc-docker-node",
                "location":"centralus",
                "virtualNetworkResourceGroup":"docker-nodes-vnet-1",
                "virtualNetworkName":"docker-nodes-vnet",
                "networkSecurityGroupName":"docker-nodes-dev-nsg",
                "diagnosticsStorageAccountName":"cfdockernodediagvnet1",
                "imageReference":{
                   "publisher":"Canonical",
                   "offer":"UbuntuServer",
                   "sku":"16.04-LTS",
                   "version":"latest"
                },
                "machineTypes":{
                   "all":[
                      "Standard_DS1_v2",
                      "Standard_DS2_v2",
                      "Standard_D2s_v3",
                      "Standard_D4s_v3",
                      "Standard_D8s_v3",
                      "Standard_D16s_v3",
                      "Standard_B1s",
                      "Standard_B1ms",
                      "Standard_B2s",
                      "Standard_B2ms",
                      "Standard_B4ms",
                      "Standard_B8ms"
                   ],
                   "default":"Standard_DS1_v2"
                },
                "volumeTypes":{
                   "all":[
                      "Premium_LRS",
                      "Standard_LRS"
                   ],
                   "default":"Premium_LRS"
                },
                "VolumeSize":200,
                "adminUsername":"ubuntu",
                "adminPublicKey":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCastLfm9R7tVnCssIKMrB21PptPZXyoKB4Px5xKtJwriDsTAyfQouwwsWlv/jIgvlDioXL3Vmz8GtHZRrTnlv60afWvtsVMjDQzd+NoGPX2HlS07aHcOhWZPYJujtUaZHanb9gNTKHReQpHHpX//n6WEbewsfEOG3zrJQyJoQj0XmBJamxwpWLbPiGFdZx6HQ+0147WS9WJGBt2gzKMaPsFx4+9zoGON2FH9odl384EQTwK6PUxeaIEhwtl4ZUJM8MILD4GglQ278y7N1B7yiJbCjwWUeoLdBDCUnA7U/03t55PIEEGy/nCVBWcnu0ZovmaHI4pk5wx+1oufSXyRLZ",
                "metadata":{
                   "kind":"docker-node",
                   "environment":"azure-staging"
                }
             }
          }
       },
      "aws": {
        "name": "aws",
        "settings": {
          "KeyName": "cf-test-1",
          "route53Zone": "ZVG87U9HV33SS"
        },
        "services": {
          "docker-node-us-east-1": {
            "region": "us-east-1",
            "name": "docker-node",
            "dnsPrefix": "cf-staging-aue1-docker-node",
            "dnsDomain": "cf-cd.com.",
            "iface": "public",
            "imageName": "ami-e33d40f5",
            "machineTypes": {
              "all": [
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge"
              ],
              "default": "t2.large"
            },
           "volumeTypes": {
                  "all": [
                    "standard",
                    "gp2"
                  ],
                  "default": "gp2"
            },
            "securityGroupIds": [
              "sg-ef5ed293", "sg-95fa54e9"
            ],
            "BlockDeviceMappings": [
              {
                "DeviceName": "/dev/sda1",
                "Ebs": {
                  "DeleteOnTermination": true,
                  "VolumeSize": 200,
                  "VolumeType": "standard"
                }
              }
            ],
            "subnetId": [
              "subnet-66def54e",
              "subnet-12bddd28"
            ],
            "metadata": {
              "autoscale": "docker-node",
              "environment": "aws-staging"
            }
          }
        }
      },
      "gce": {
          "name": "gce",
          "settings": {
            "keyFilename": "/etc/admin/gce_creds.json",
            "projectId": "savvy-badge-103912"
          },
          "services": {}
      }
    }
  env:
    OAUTH_ROUTER_CALLBACK: http://codefresh-inc-3.cf-cd.com:2222/api/auth/github/callback/

tags:
  saas: true
  infra: true
  old-scheduler: false

runner:
  enabled: false

builder:
  enabled: false

payments:
  stripeIgnoreAccountNotFoundErrors: "true"

global:
  internalServiceTolerations:
  - effect: NoSchedule
    key: nodeType
    operator: Equal
    value: internal

  mongodbImage: bitnami/mongodb:3.4.6-r0
