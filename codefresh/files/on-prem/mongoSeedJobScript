#!/usr/bin/env bash

waitForMongoDB() {
    while true; do
        status=$(mongosh ${MONGODB_ROOT_URI} --eval "db.adminCommand('ping')" 2>&1)

        echo -e "MongoDB status:\n$status"
        if $(echo $status | grep 'ok: 1' -q); then
            break
        fi

        echo "Sleeping 10 seconds ..."
        sleep 10
    done
}

parseMongoURI() {
    local proto="$(echo $1 | grep :// | sed -e's,^\(.*://\).*,\1,g')"
    local parameters="$(echo $1 | grep '?' | cut -d '?' -f2)"; if [[ -n $parameters ]]; then parameters="?${parameters}"; fi
    local url="$(echo ${1/$proto/})"
    local userpass="$(echo $url | grep @ | cut -d@ -f1)"
    local hostport="$(echo $url | sed s/$userpass// | sed "s/\/\?$parameters//" | sed -re "s/\/\?|@//g")" 
  
    MONGODB_PASSWORD="$(echo $userpass | grep : | cut -d: -f2)"
    MONGODB_USER="$(echo $userpass | grep : | cut -d: -f1)"
    MONGODB_URI="$proto$userpass@$hostport/${MONGODB_DATABASE}$parameters"
    MONGODB_ROOT_URI="$proto${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@$hostport/admin$parameters"
}

getMongoVersion() {
    MONOGDB_VERSION=$(mongosh ${MONGODB_ROOT_URI} --eval "db.version()" 2>&1 | tail -n1)
}

parseMongoURI $MONGODB_URI

if [[ -z "${MONGODB_ROOT_USER}" || -z "${MONGODB_ROOT_PASSWORD}" || -z "${MONGODB_URI}" || -z "${MONGODB_DATABASE}" || -z "${MONGODB_USER}" || -z "${MONGODB_PASSWORD}" ]]; then
    echo "Some of the variables are not defined correctly. Check them out !"
    exit 1
fi

waitForMongoDB

getMongoVersion

for db in ${MONGODB_DATABASE} "archive"; do
    mongosh ${MONGODB_ROOT_URI} --eval "db.getSiblingDB('${db}').createUser({user: '${MONGODB_USER}', pwd: '${MONGODB_PASSWORD}', roles: ['readWrite']})" || echo "Error creating the user. Continuing anyway assuming the user is already created..."
done

# if [ $? == 0 ]; then
#     if [[ $MONOGDB_VERSION =~ 4.* ]]; then #if mongodb server 4.x version, run mongoimport with --legacy flag
#         mongoimport --uri ${MONGODB_URI} --collection idps --type json --legacy --file /etc/admin/idps.json
#     else
#         mongoimport --uri ${MONGODB_URI} --collection idps --type json --file /etc/admin/idps.json
#     fi  
# else
#     echo "Something went wrong !" && exit 1
# fi

if [ $? == 0 ]; then
    if [[ $MONOGDB_VERSION =~ 4.* ]]; then #if mongodb server 4.x version, run mongoimport with --legacy flag
        mongoimport --uri ${MONGODB_URI} --collection accounts --type json --legacy --file /etc/admin/accounts.json
    else
        mongoimport --uri ${MONGODB_URI} --collection accounts --type json --file /etc/admin/accounts.json    
    fi  
else
    echo "Something went wrong !" && exit 1
fi

if [ $? == 0 ]; then
    if [[ $MONOGDB_VERSION =~ 4.* ]]; then #if mongodb server 4.x version, run mongoimport with --legacy flag
        mongoimport --uri ${MONGODB_URI} --collection users --type json --legacy --file /etc/admin/users.json
    else
        mongoimport --uri ${MONGODB_URI} --collection users --type json --file /etc/admin/users.json
    fi 
else
    echo "Something went wrong !" && exit 1
fi
