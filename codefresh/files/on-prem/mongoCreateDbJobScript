#!/usr/bin/env bash

waitForMongoDB() {
        while true; do
                status=$(mongo ${MONGODB_ROOT_URI} --eval "db.adminCommand('ping')" | tail -n1)

                echo "MongoDB status = $status"
                [ "$status" == '{ "ok" : 1 }' ] && break

                echo "Sleeping 10 seconds ..."
                sleep 10

        done
}

parseMongoURI() {

  local proto="$(echo $1 | grep :// | sed -e's,^\(.*://\).*,\1,g')"
  local parameters="$(echo $1 | grep '?' | cut -d '?' -f2)"; if [[ -n $parameters ]]; then parameters="?${parameters}"; fi
  local url="$(echo ${1/$proto/})"
  local userpass="$(echo $url | grep @ | cut -d@ -f1)"
  local hostport="$(echo $url | sed s/$userpass// | sed "s/\/\?$parameters//" | sed -re "s/\/\?|@//g")" 
 
  MONGODB_PASSWORD="$(echo $userpass | grep : | cut -d: -f2)"
  MONGODB_USER="$(echo $userpass | grep : | cut -d: -f1)"
  MONGODB_URI="$proto$userpass@$hostport/${MONGODB_DATABASE}$parameters"
  MONGODB_ROOT_URI="$proto${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@$hostport/admin$parameters"

}

parseMongoURI $MONGODB_URI

if [[ -z "${MONGODB_ROOT_USER}" || -z "${MONGODB_ROOT_PASSWORD}" || -z "${MONGODB_URI}" || -z "${MONGODB_DATABASE}" || -z "${MONGODB_USER}" || -z "${MONGODB_PASSWORD}" ]]; then
       echo "Some of the variables are not defined correctly. Check them out !"
       exit 1
fi

waitForMongoDB

mongo ${MONGODB_ROOT_URI} --eval "db.getSiblingDB('${MONGODB_DATABASE}').createUser({user: '${MONGODB_USER}', pwd: '${MONGODB_PASSWORD}', roles: ['readWrite']})"
