[
  {
    "metadata": {
      "name": "system/default-plan"
    },
    "description": "System default template for plan",
    "environmentCertPath": "/etc/ssl/cf/",
    "dockerDaemonScheduler": {
      "type": "ConsulNodes",
      "cluster": {
        "name": "",
        "type": "builder",
        "returnRunnerIfNoBuilder": true
      },
      "notCheckServerCa": true,
      "clientCertPath": "/etc/ssl/cf/"
    },
    "runtimeScheduler": {
      "type": "KubernetesPod",
      "cluster": {
        "inCluster": true,
        "namespace": "codefresh"
      },
      "image": "codefresh/engine:master",
      "envVars": {
        "RESOURCE_LIMITATIONS_JSON": "/etc/admin/resource-limitations.json",
        "RUNTIME_INTERNAL_REGISTRY_JSON": "/etc/admin/internal-registry.json",
        "RUNTIME_ADDITIONAL_INTERNAL_REGISTRIES_JSON": "/etc/admin/additional-internal-registries.json",
        "LOGGER_LEVEL": "debug",
        "NODE_ENV": "kubernetes",
        "DOCKER_PUSHER_IMAGE": "codefresh/cf-docker-pusher:v2",
        "DOCKER_PULLER_IMAGE": "codefresh/cf-docker-puller:v2",
        "DOCKER_BUILDER_IMAGE": "codefresh/cf-docker-builder:v10",
        "CONTAINER_LOGGER_IMAGE": "codefresh/cf-container-logger:0.0.19",
        "GIT_CLONE_IMAGE": "codefresh/cf-git-cloner:v5",
        "NODE_TLS_REJECT_UNAUTHORIZED": "0"
      },
      "volumeMounts": {
        "internal-registry": {
          "name": "internal-registry",
          "mountPath": "/etc/admin/internal-registry.json",
          "subPath": "internal-registry.json",
          "readOnly": true
        },
        "additional-internal-registries": {
          "name": "additional-internal-registries",
          "mountPath": "/etc/admin/additional-internal-registries.json",
          "subPath": "additional-internal-registries.json",
          "readOnly": true
        },
        "resource-limitations": {
          "name": "resource-limitations",
          "mountPath": "/etc/admin/resource-limitations.json",
          "subPath": "resource-limitations.json",
          "readOnly": true
        },
        "cf-certs": {
          "name": "cf-certs",
          "mountPath": "/etc/ssl/cf",
          "readOnly": true
        }
      },
      "volumes": {
        "internal-registry": {
          "name": "internal-registry",
          "configMap": {
            "name": "cf-codefresh-registry"
          }
        },
        "additional-internal-registries": {
          "name": "additional-internal-registries",
          "configMap": {
            "name": "cf-codefresh-registry"
          }
        },
        "resource-limitations": {
          "name": "resource-limitations",
          "configMap": {
            "name": "cf-codefresh-resource-limitations"
          }
        },
        "cf-certs": {
          "name": "cf-certs",
          "secret": {
            "secretName": "cf-codefresh-certs-client"
          }
        }
      }
    },
    "isPublic": true,
    "nonComplete": true
  },
  {
    "metadata": {
      "name": "system/default/hybrid/k8"
    },
    "description": "Default hybrid system runtime environment for kubernetes",
    "dockerDaemonScheduler" : {},
    "runtimeScheduler" : {},
    "isPublic": true,
    "nonComplete": true
  },
  {
    "metadata": {
      "name": "system/dind-ws-rbd-pro-rook1-xfs"
    },
    "description": "Pro-rook1 system default template for plan",
    "environmentCertPath": "/etc/ssl/cf/",
    "dockerDaemonScheduler": {
      "type": "DindPodPvc",
      "cluster": {
        "name": "cluster-dev-2.cf-cd.com",
        "namespace": "default",
        "kubeconfigFilePath": "/root/.kube/config",
        "nodeSelector": {
          "codefresh/node-type": "dind",
          "codefresh/runtime-environment": "codefresh"
        }
      },
      "storageClassName": "dind-rbd-pro-rook1-xfs",
      "volumeSize": "40Gi",
      "reuseVolumeSelector": "app_env,account_name",
      "pvcs": [
        {
          "name": "dind",
          "storageClassName": "dind-rbd-pro-rook1-xfs",
          "volumeSize": "20Gi",
          "reuseVolumeSelector": "app_env,codefresh_app,account_name"
        },
        {
          "name": "workspace",
          "storageClassName": "dind-rbd-pro-rook1-xfs",
          "volumeSize": "1Gi",
          "reuseVolumeSelector": "app_env,codefresh_app,account_name,pipeline_id"
        }
      ],
      "clientCertPath": "/etc/ssl/cf/",
      "dindImage": "codefresh/dind:17.12-v12",
      "envVars": {
        "ENABLED_COLLECTORS": "^(diskstats|stat)$",
        "CLEAN_DOCKER": "true"
      },
      "terminationGracePeriodSeconds": 300,
      "notCheckServerCa": true,
      "defaultDindResources": {
        "requests": {
          "cpu": "900m",
          "memory": "1024Mi"
        },
        "limits": {
          "cpu": "2500m",
          "memory": "7168Mi"
        }
      },
      "volumeMounts": {
        "cf-certs-dind": {
          "name": "cf-certs-dind",
          "mountPath": "/etc/ssl/cf",
          "readOnly": false
        }
      },
      "volumes": {
        "cf-certs-dind": {
          "name": "cf-certs-dind",
          "secret": {
            "secretName": "cf-certs-dind"
          }
        }
      }
    },
    "runtimeScheduler": {
      "internalInfra": true,
      "type": "KubernetesPod",
      "cluster": {
        "name": "cluster-dev-2.cf-cd.com",
        "namespace": "default",
        "kubeconfigFilePath": "/root/.kube/config",
        "nodeSelector": {
          "codefresh/node-type": "app"
        }
      },
      "image": "codefresh/engine:master",
      "resources": {
        "requests": {
          "cpu": "60m",
          "memory": "100Mi"
        },
        "limits": {
          "cpu": "1000m",
          "memory": "2048Mi"
        }
      },
      "envVars": {
        "LOGGER_LEVEL": "debug",
        "NODE_ENV": "kubernetes",
        "DOCKER_PUSHER_IMAGE": "codefresh/cf-docker-pusher:v2",
        "DOCKER_PULLER_IMAGE": "codefresh/cf-docker-puller:v2",
        "DOCKER_BUILDER_IMAGE": "codefresh/cf-docker-builder:v11",
        "CONTAINER_LOGGER_IMAGE": "codefresh/cf-container-logger:0.0.19",
        "GIT_CLONE_IMAGE": "codefresh/cf-git-cloner:v5"
      }
    }
  },
  {
    "metadata": {
      "name": "system/plan/linux"
    },
    "description": "Linux runtime environment for free plan",
    "runtimeScheduler": {
      "internalInfra": true
    },
    "extends": [
      "system/default-plan"
    ],
    "plan": "FREE",
    "isDefault": true
  },
  {
    "metadata": {
      "name": "system/plan/hybrid/k8s"
    },
    "description": "hybrid k8s runtime environment for basic plan",
    "extends": [
      "system/default/hybrid/k8"
    ],
    "plan": "FREE",
    "nonComplete": true
  },
  {
    "metadata": {
      "name": "system/plan/linux"
    },
    "description": "Linux runtime environment for basic plan",
    "runtimeScheduler": {
      "internalInfra": true
    },
    "extends": [
      "system/default-plan"
    ],
    "plan": "BASIC",
    "isDefault": true
  },
  {
    "metadata": {
      "name": "system/plan/hybrid/k8s"
    },
    "description": "hybrid k8s runtime environment for basic plan",
    "extends": [
      "system/default/hybrid/k8"
    ],
    "plan": "BASIC",
    "nonComplete": true
  },
  {
    "metadata": {
      "name": "system/plan/linux"
    },
    "description": "Linux runtime environment for basic plan",
    "runtimeScheduler": {
      "internalInfra": true
    },
    "extends": [
      "system/default-plan"
    ],
    "plan": "PRO",
    "isDefault": true
  },
  {
    "metadata": {
      "name": "system/plan/hybrid/k8s"
    },
    "description": "hybrid k8s runtime environment for pro plan",
    "extends": [
      "system/default/hybrid/k8"
    ],
    "plan": "PRO",
    "nonComplete": true
  }
]
