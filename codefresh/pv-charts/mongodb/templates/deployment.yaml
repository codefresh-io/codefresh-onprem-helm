apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      {{- $nodeSelector := coalesce .Values.nodeSelector .Values.global.storagePodNodeSelector }}
      {{- if $nodeSelector }}
      nodeSelector:
{{ toYaml $nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.global.privateRegistry }}
      imagePullSecrets:
        - name: "{{ .Release.Name }}-{{ .Values.global.codefresh }}-registry"
      {{- end }}
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
      {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
      - name: volume-permissions
        image: busybox 
        command:
        - /bin/sh
        - -ec
        args:
          - |
            chown -R "{{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}" /bitnami/mongodb
        volumeMounts:
        - mountPath: /bitnami/mongodb
          name: data
        securityContext:
          runAsUser: 0
      {{- end }}           
      containers:
      - name: {{ template "fullname" . }}
        {{- $image := (split ":" .Values.image)._0 -}}
        {{- $tag := default (split ":" .Values.image)._1 .Values.version -}}
        {{- if .Values.global.privateRegistry }}
        image: "{{ .Values.global.dockerRegistry }}codefresh/{{ trimPrefix "bitnami/" $image }}:{{ $tag }}"
        {{- else }}
        image: "{{ $image }}:{{ $tag }}"
        {{- end }}
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        {{- if .Values.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 10 }}
        {{- end }}
        env:
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: {{ default "" .Values.mongodbUsername | quote }}
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: mongodb-password
        - name: MONGODB_DATABASE
          value: {{ default "" .Values.mongodbDatabase | quote }}
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "mongodb.pvcName" . }}
