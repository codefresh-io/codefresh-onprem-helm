## Specify a imagePullPolicy
## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
imagePullPolicy: IfNotPresent

# number of Nats replicas
# by default 1
# replicaCount: 1

# image name
image: codefresh/cf-api

# image tag  
imageTag: v118

# application URL
appUrl: https://codefresh.local

# port 
port: 80

# protocol
protocol: https

# target port
targetPort: 80

# readiness port
readinessPort: 80

# mongodb service name to use
mongodbService: mongodb

# defualt mongo image to use for mongoimport
mongoImage: mongo:3.4

# mongodb user; default empty
# mongodbUsername:

# mongodb password; default empty
# mongodbPassword:

# mongodb database; local by default
mongodbDatabase: local

# consul service
consulService: consul

# nats service
natsService: nats

# nats service port
natsServicePort: 4222

# RMQ service
rabbitmqService: rabbitmq
# RabbitMQ user; default user
rabbitmqUsername: user

# RabbitMQ password; default empty
# rabbitmqPassword:

# PostresSQL service name
postgresService: postgresql

# PostresSQL database
postgresDatabase: postgres
# PostresSQL user
postgresUser: postgres

# Redis service
redisService: redis

# GitHub configuration
github:
  apiHost: api.github.com
  apiPathPrefix: /api/v3
  loginHost: github.com
  protocol: https

# GitHub client ID
# githubClientID:

# GitHub Client Secret key
# githubClientSecret:

# GitHub internal token
# githubInternalToken:

gitlab:
  loginHost: gitlab.com
  protocol: https

# GitLab Client ID
# gitlabClientID:

# GitLab Cleint Secret key
# gitlabClientSecret:

# Bitbucket
# bitbucketClientID:
# bitbucketClientSecret:

# API Safe Secret
# apiSafeSecret: 

# Stripe secret key
# stripeSecretKey: 

# Firebase secret
# firebaseSecret: 
firebaseUrl:  https://codefresh-on-prem.firebaseio.com/on-prem

# Slack secrets
# slackAppID: 
# slackInternal:
# slackAppSecret:

# Segment
# segmentKey:
segmentEnable: false

# New Relic
# newrelicLicenseKey:

# Loggly 
# logglyToken:

# TLS sign client key
# tlsClientKey:

# ENV
env:
  APP_ENV: staging
  NODE_ENV: kubernetes
  DOCKER_NODE_PUBLIC_DOMAIN: cf-cd.com
  DOCKER_NODE_CERT_PATH: /etc/ssl/cf
  PROVIDERS_JSON_PATH: /etc/admin/providers.json
  OAUTH_ROUTER_CALLBACK:
  MAIL_ACTIVE: false
  LOGS_PATH: /var/log/cf-api.log
  LOGGER_LEVEL: error
  LOGGER_MORAN_ACTIVE: false
  PROGRESS_BUILDLOGS_BUCKETNAME: progress-logs-staging