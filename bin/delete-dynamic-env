#!/usr/bin/env bash

set -e


readonly basepath="$(dirname "$0")"
readonly keyfile="service-account.json"
source "$basepath/helpers"

usage() {
	echo "$0 [-h] namespace-name"
	exit 0
}

check kubectl
check aws

[ "$1" == "-h" ] && usage

env=$(yq -r '.environments[] | select(.name=="dynamic")'  "map.yaml")
if [ -z "$env" ]
then
	echo "Environment $ENVIRONMENT not exist in map.yaml"
	exit 1
fi

echo "Available kubernetes contexts"
kubectl config get-contexts
KUBE_CONTEXT=$(echo $env | yq .cluster | sed s/\"//g )
namespaceName=$ENVIRONMENT

[[ -z "$AWS_ACCESS_KEY_ID" || -z "$AWS_SECRET_ACCESS_KEY" ]] && err "Please set your AWS credentials"


# set debug flag
if [ "$DEBUG_CHART" == "true" ]; then
  debug_flag="--debug"
fi

# set wait flag
WAIT=${WAIT:-true}
if [ "$WAIT" == "true" ]; then
  wait_flag="--wait"
fi

# set timeout flag
if [ ! -z "$TIMEOUT" ]; then
  timeout_flag="--timeout $TIMEOUT"
fi

# set dry run flag
if [ "$DRY_RUN" == "true" ]; then
  dry_run_flag="--dry-run"
fi

# get ingress public ip

if [ "$DRY_RUN" == "true" ]; then
  msg "DRY_RUN delete: skip deleting routes and namespace"
else
  publicIp=$(getIngressIp "$namespaceName")
  msg "Delete the release using helm delete --purge"
  helm delete --purge $dry_run_flag $wait_flag $debug_flag $timeout_flag $namespaceName
  msg "Delete the namespace $namespaceName"
  kubectl delete namespace $namespaceName

  msg "Removing the environment from DNS..."
  deleteFromRoute53 "${namespaceName}.dev.codefresh.io" "$publicIp"

  #need to loop over the Istio extra deployments if Istio is enabled:
  if isIstioEnabled; then
    msg "Removing the Istio extra deployment from DNS..."

    publicIstioIp=$(getIstioIngressgatewayIp)
    msg "The Istio public's ip is: '$publicIstioIp'"
    line=`yq -y .global.istio.extraDeployments codefresh/env/dynamic/values.yaml | grep "dev.codefresh.io" |  sed 's/-//'| sed 's/://' |  xargs`
    for val in $line; do
        msg "The Istio ingress public's ip is: '$publicIstioIp', adding it to dns (route53)"
        deleteFromRoute53 "${publicIstioIp}" "$publicIstioIp"
    done
  else
    echo Istio is disabled, skipping removing DNS extra deployments;
  fi
fi