#!/bin/bash -e

readonly basepath="$(dirname "$0")"
readonly keyfile="service-account.json"
source "$basepath/helpers"

usage() {
	echo "$0 [-h] namespace-name project-name cluster-name [zone]"
	exit 0
}

waitForIngressExternalIp() {
	until getIngressIp "$1" >/dev/null 2>&1;
	do
		sleep 2
	done
}

check kubectl
check aws

[ "$1" == "-h" ] && usage

readonly namespaceName="$1"
readonly projectName="${2:-savvy-badge-103912}"
readonly clusterName="${3:-cf-staging}"
readonly zone="${4:-us-central1-a}"

[ -z "$namespaceName" ] && err "Please specify the namespace name!"

[[ -z "$AWS_ACCESS_KEY_ID" || -z "$AWS_SECRET_ACCESS_KEY" ]] && err "Please set your AWS credentials"
[[ -z "$GOOGLE_SERVICE_ACCOUNT" ]] && err "Please set the service-account env var!"

# To encrypt the service account file use: `cat service-account.json | base64 -w 0`
msg "Decrypting the GOOGLE_SERVICE_ACCOUNT env variable"
echo "$GOOGLE_SERVICE_ACCOUNT" | base64 -d > $keyfile

msg "Logging in with the service account to google cloud and generating Kubernetes config"
gcloud config set container/cluster $clusterName
gcloud config set compute/zone $zone
gcloud config set project $projectName
gcloud auth activate-service-account --key-file $keyfile
gcloud container clusters get-credentials $clusterName

msg "Decrypting all secrets"
./sops.sh -d

msg "Creating the namespace $namespaceName"
kubectl create namespace $namespaceName

msg "Deploy the Codefresh' helm package"
helm upgrade $namespaceName codefresh \
	--install \
	--force \
	--reset-values \
	--recreate-pods \
	--namespace $namespaceName \
	--set ingress.domain="${namespaceName}.dev.codefresh.io" \
	--set ingress.enabled=true \
	--values codefresh/values.yaml \
	--values codefresh/values-dec.yaml \
	--values codefresh/regsecret-dec.yaml \
	--values codefresh/env/dynamic/values-dec.yaml \
	--values codefresh/env/dynamic/values.yaml

msg "Waiting for the ingress controller to receive a public ip"
waitForIngressExternalIp "$namespaceName"

publicIp=$(getIngressIp "$namespaceName")
msg "The ingress public's ip is: '$publicIp', adding it to dns (route53)"

addToRoute53 "${namespaceName}.dev.codefresh.io" "$publicIp"
msg "Your environment should be accessible soon at: ${namespaceName}.dev.codefresh.io"

msg "Status of all the services: "
kubectl --namespace=$namespaceName get pods

